document.getElementById('year').textContent = new Date().getFullYear();
function copyWalletAddress(e) {
    navigator.clipboard.writeText(e.textContent).then(() => {

    }).catch(err => {
        console.error('–û—à–∏–±–∫–∞ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è: ', err);
    });
    return false;
}

// –≠–ª–µ–º–µ–Ω—Ç—ã DOM
const audioPlayer = document.getElementById('audio-player');
const playBtn = document.getElementById('play-btn');
const pauseBtn = document.getElementById('pause-btn');
const stopBtn = document.getElementById('stop-btn');
const volumeControl = document.getElementById('volume');
const trackNameElement = document.getElementById('track-name');
const trackAuthorElement = document.getElementById('track-author');
const trackGenre = document.getElementById('track-genre');
const trackProgress =  document.getElementById('track-progress');
const trackTimeElement = document.getElementById('track-time');
const currentImageElement = document.getElementById('current-image');
const imagePlaceholder = document.getElementById('image-placeholder');
const lastUpdatedElement = document.getElementById('last-updated');
const updateIndicator = document.getElementById('update-indicator');
const nextAuthor = document.getElementById('next-author');
const nextName = document.getElementById('next-name');

// URL –ø—Ä–æ–∫—Å–∏
const proxyUrl = 'https://proxy.mds.d0h.ru/';

// –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Ç–µ–∫—É—â–µ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
let currentImageUrl = '';
let lastUpdateTime = 0;

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
async function checkForUpdates(first) {
    try {
        //updateIndicator.textContent = 'üîÑ –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π...';
        //updateIndicator.classList.add('loading');

        const response = await fetch(`${proxyUrl}?t=${Date.now()}`);
        const result = await response.json(); // –ü–æ–ª—É—á–∞–µ–º –≤–µ—Å—å –æ–±—ä–µ–∫—Ç –æ—Ç–≤–µ—Ç–∞

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º success –∏ –∏–∑–≤–ª–µ–∫–∞–µ–º data
        if (result.success && result.data) {
            const data = result.data; // –û—Å–Ω–æ–≤–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ —Ç–µ–ø–µ—Ä—å –∑–¥–µ—Å—å
            if (first) {
                audioPlayer.src = data.stream;
            }
            audioPlayer.crossOrigin = "anonymous";
            // –û–±–Ω–æ–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç (data.text –≤–º–µ—Å—Ç–æ data.current_track)
            if (data.text)   {
                trackNameElement.textContent = data.current_track.name;
            }

            if (data.current_track?.genre) {
                trackGenre.textContent = data.current_track?.genre;
            }

            // –û–±–Ω–æ–≤–ª—è–µ–º –∞–≤—Ç–æ—Ä–∞ (–µ—Å–ª–∏ –Ω—É–∂–Ω–æ)
            if (data.current_track?.author) {
                trackAuthorElement.textContent = data.current_track.author;
            }

            if (data.played_percent) {
                trackProgress.style.width = data.played_percent + '%';
            }

            if (data.playlist?.next?.[0]?.author) {
                nextAuthor.textContent = data.playlist?.next?.[0]?.author;
            }

            if (data.playlist?.next?.[0]?.name) {
                nextName.textContent = data.playlist?.next?.[0]?.name;
            }

            // –û–±–Ω–æ–≤–ª—è–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ (data.image_url)
            if (data.image_url && data.image_url !== currentImageUrl) {
                currentImageUrl = data.image_url;
                currentImageElement.style.display = 'none';
                imagePlaceholder.style.display = 'block';
                imagePlaceholder.textContent = '–ó–∞–≥—Ä—É–∑–∫–∞ –Ω–æ–≤–æ–π –∏–ª–ª—é—Å—Ç—Ä–∞—Ü–∏–∏...';

                const img = new Image();
                img.onload = () => {
                    currentImageElement.src = currentImageUrl;
                    currentImageElement.style.display = 'block';
                    imagePlaceholder.style.display = 'none';
                    lastUpdatedElement.textContent = new Date(data.timestamp * 1000).toLocaleTimeString();
                };
                img.onerror = () => {
                    imagePlaceholder.textContent = '–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∏–ª–ª—é—Å—Ç—Ä–∞—Ü–∏–∏';
                };
                img.src = currentImageUrl;
            }
        }

        //updateIndicator.textContent = '‚úî –ê–∫—Ç—É–∞–ª—å–Ω–æ';
        //updateIndicator.classList.remove('loading');
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π:', error);
        updateIndicator.textContent = '‚ùå –û—à–∏–±–∫–∞';
        updateIndicator.classList.remove('loading');
    }
}

setInterval(checkForUpdates, 600);

// –ü–µ—Ä–≤–æ–Ω–∞—á–∞–ª—å–Ω–∞—è –∑–∞–≥—Ä—É–∑–∫–∞
checkForUpdates(true);

playBtn.addEventListener('click', async () => {
    try {

        // 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∏—Å—Ç–æ—á–Ω–∏–∫ –∞—É–¥–∏–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω
        if (!audioPlayer.src) {
            throw new Error("–ê—É–¥–∏–æ–ø–æ—Ç–æ–∫ –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω");
        }

        // 3. –ü—ã—Ç–∞–µ–º—Å—è –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ—Å—Ç–∏
        await audioPlayer.play();

        // 4. –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∫–Ω–æ–ø–æ–∫
        playBtn.disabled = true;
        pauseBtn.disabled = false;
        stopBtn.disabled = false;

    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è:', error);
        //alert(`–û—à–∏–±–∫–∞: ${error.message}`);
    }
});

pauseBtn.addEventListener('click', () => {
    audioPlayer.pause();
    playBtn.disabled = false;
    pauseBtn.disabled = true;
});

stopBtn.addEventListener('click', () => {
    audioPlayer.pause();
    audioPlayer.currentTime = 0;
    playBtn.disabled = false;
    pauseBtn.disabled = true;
    stopBtn.disabled = true;
});

// –ö–æ–Ω—Ç—Ä–æ–ª—å –≥—Ä–æ–º–∫–æ—Å—Ç–∏
volumeControl.addEventListener('input', () => {
    audioPlayer.volume = volumeControl.value;
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π –∞—É–¥–∏–æ–ø–ª–µ–µ—Ä–∞
audioPlayer.addEventListener('playing', () => {
    console.log('–í–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ –Ω–∞—á–∞—Ç–æ');
});

audioPlayer.addEventListener('error', () => {
    console.error('–û—à–∏–±–∫–∞ –∞—É–¥–∏–æ–ø–ª–µ–µ—Ä–∞:', audioPlayer.error);
    alert('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–∏ –ø–æ—Ç–æ–∫–∞.');
});